// Auto-generated by the postman-to-k6 converter

import "./libs/shim/core.js";
import "./libs/shim/urijs.js";

export let options = { maxRedirects: 4 };

const Request = Symbol.for("request");
postman[Symbol.for("initial")]({
  options,
  environment: {
    jwtToken: "",
    guid: "",
    springBootSecurityUrl: "http://localhost:8888/springbootsecurity",
    usernameSpringBoot: "user@gmail.com",
    passwordSpringBoot: "1234"
  }
});

export default function() {
  signIn();
  signOut();
  getAllUsers();
}

function signIn() {
  postman[Request]({
    name: "Login",
    id: "20b0fcc4-91d3-48b8-a6d2-aefac054f946",
    method: "POST",
    address: "{{springBootSecurityUrl}}/dispatcher/api/authentication",
    data:
      '{\n    "username": "{{usernameSpringBoot}}",\n    "password": {{passwordSpringBoot}}\n}',
    headers: {
      "Content-Type": "application/json",
      Accept: "application/json"
    },
    post(response) {
      pm.test("Status code is 200", function () {
        pm.response.to.have.status(200);
        var jsonData = pm.response.json();
        var jwtToken = jsonData.data.jwt;
        var guid = jsonData.data.uid;
        console.log("Jwt token: " + jwtToken);
        pm.environment.set("jwtToken", jwtToken);
        pm.environment.set("guid", guid);
      });
    }
  });
}


function signOut(){
  postman[Request]({
    name: "Logout",
    id: "304da45b-d5fa-47c8-a157-a27769006155",
    method: "DELETE",
    address:
      "{{springBootSecurityUrl}}/dispatcher/api/authentication/{{guid}}?username={{usernameSpringBoot}}",
    post(response) {
      pm.test("Status code is 200", function() {
        pm.response.to.have.status(200);
        var jsonData = pm.response.json();
        var response = jsonData.data;
        if (response === null) {
          console.log(
            "Removing the Authorization token from the global scope.."
          );
          pm.environment.set("jwtToken", "");
        }
      });
    },
    auth(config, Var) {
      config.headers.Authorization = `Bearer ${pm[Var]("jwtToken")}`;
    }
  });
}

function getAllUsers(){
  postman[Request]({
    name: "Get all users",
    id: "612890e9-d88c-4cf1-b4a4-70d172b7a4bc",
    method: "GET",
    address: "{{springBootSecurityUrl}}/dispatcher/api/user/all"
  });
}